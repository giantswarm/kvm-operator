e2eTest: &e2eTest
  machine: true
  working_directory: /home/circleci/.go_workspace/src/github.com/giantswarm/kvm-operator
  steps:
  - checkout
  - run: |
      wget -q $(curl -sS https://api.github.com/repos/giantswarm/e2e-harness/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
      chmod +x ./e2e-harness
  - run: ./e2e-harness setup --remote=true --existing=true --k8s-context=giantswarm-e2e --k8s-api-url=${K8S_API_URL} --k8s-cert=${K8S_CERT_ENCODED} --k8s-cert-ca=${K8S_CERT_CA_ENCODED} --k8s-cert-key=${K8S_CERT_KEY_ENCODED}
  - run:
      command: ./e2e-harness test --test-dir=${TEST_DIR}
      no_output_timeout: 30m
  - store_artifacts:
      path: .e2e-harness/workdir/logs
      destination: logs
  - run:
      command: ./e2e-harness teardown
      when: always

version: 2
jobs:
  build:
    machine: true
    steps:
    - checkout

    - run: |
        wget -q $(curl -sS -H "Authorization: token $RELEASE_TOKEN" https://api.github.com/repos/giantswarm/architect/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
        chmod +x ./architect
        ./architect version
    - run: ./architect build
    - store_test_results:
        path: /tmp/results
    - deploy:
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            ./architect deploy
          fi

  e2eTestCurPRReady:
    environment:
      TESTED_VERSION: "current"
      TEST_DIR: "integration/test/ready"
    <<: *e2eTest
  e2eTestCurMasterReady:
    environment:
      TESTED_VERSION: "current"
      TEST_DIR: "integration/test/ready"
    <<: *e2eTest

workflows:
  version: 2
  build_and_e2eTest:
    jobs:
      - build
      - hold:
          type: approval
          filters:
            branches:
              ignore: master
          requires:
          - build

      - e2eTestCurPRReady:
          requires:
          - hold
      - e2eTestCurMasterReady:
          filters:
            branches:
              only: master
          requires:
          - build
