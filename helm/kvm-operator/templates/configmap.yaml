apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "resource.default.name"  . }}
  namespace: {{ include "resource.default.namespace"  . }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
data:
  config.yml: |
    server:
      enable:
        debug:
          server: true
      listen:
        address: 'http://0.0.0.0:8000'
    service:
      crd:
        labelSelector: ''
      rbac:
        clusterRole:
          general: {{ include "resource.default.name" . }}
          psp: {{ include "resource.psp.name" . }}
      kubernetes:
        address: ''
        inCluster: true
        tls:
          caFile: ''
          crtFile: ''
          keyFile: ''
      installation:
        dns:
          servers: {{ .Values.dns.servers }}
        ntp:
          servers: {{ .Values.ntp.servers }}
        {{- if .Values.oidc.enabled }}
        tenant:
          kubernetes:
            api:
              auth:
                provider:
                  oidc:
                    clientID: '{{ .Values.oidc.clientID }}'
                    issuerURL: '{{ .Values.oidc.issuerURL }}'
                    usernameClaim: '{{ .Values.oidc.usernameClaim }}'
                    usernamePrefix: '{{ .Values.oidc.usernamePrefix }}'
                    groupsClaim: '{{ .Values.oidc.groupsClaim }}'
                    groupsPrefix: '{{ .Values.oidc.groupsPrefix }}'
        {{- end }}
      registry:
        domain: '{{ .Values.registry.domain }}'
        mirrors: '{{ range $i, $e := .Values.registry.mirrors }}{{ if $i }},{{end}}{{ $e }}{{end}}'
      tenant:
        proxy:
          noProxy: '{{ range $i, $e := .Values.proxy.noProxy }}{{ if $i }},{{end}}{{ $e }}{{end}}'
        ssh:
          ssoPublicKey: '{{ .Values.ssh.ssoPublicKey }}'
        update:
          enabled: true
