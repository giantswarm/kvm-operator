apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ tpl .Values.resource.default.name }}
  namespace: {{ tpl .Values.resource.default.namespace }}
  labels:
    app: {{ tpl .Values.resource.default.name }}
    version: {{ tpl .Values.project.version }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: {{ tpl .Values.resource.default.name  . }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        releasetime: {{ $.Release.Time }}
      labels:
        app: {{ tpl .Values.resource.default.name }}
        version: {{ tpl .Values.project.version }}
    spec:
      volumes:
      - name: {{ tpl .Values.project.name }}-configmap
        configMap:
          name: {{ tpl .Values.resource.default.name  . }}
          items:
          - key: config.yml
            path: config.yml
      serviceAccountName: {{ tpl .Values.resource.default.name  . }}
      securityContext:
        runAsUser: {{ tpl .Values.pod.user.id }}
        runAsGroup: {{ tpl .Values.pod.group.id }}
      containers:
      - name: {{ tpl .Values.project.name }}
        image: "{{ .Values.Installation.V1.Registry.Domain }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        args:
        - daemon
        - --config.dirs=/var/run/{{ .Values.project.name }}/configmap/
        - --config.files=config
        volumeMounts:
        - name: {{ tpl .Values.project.name }}-configmap
          mountPath: /var/run/{{ .Values.project.name }}/configmap/
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 250m
            memory: 250Mi
          limits:
            cpu: 250m
            memory: 250Mi
      imagePullSecrets:
      - name: {{ tpl .Values.resource.pullSecret.name . }}
